"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const xpring_common_js_1 = require("xpring-common-js");
class GRPCNetworkClient {
    constructor(grpcURL) {
        this.grpcClient = new xpring_common_js_1.XRPLedgerClient(grpcURL, xpring_common_js_1.grpcCredentials.createInsecure());
    }
    async getAccountInfo(getAccountInfoRequest) {
        return new Promise((resolve, reject) => {
            this.grpcClient.getAccountInfo(getAccountInfoRequest, (error, response) => {
                if (error != null || response == null) {
                    reject(error);
                    return;
                }
                resolve(response);
            });
        });
    }
    async getFee(getFeeRequest) {
        return new Promise((resolve, reject) => {
            this.grpcClient.getFee(getFeeRequest, (error, response) => {
                if (error != null || response == null) {
                    reject(error);
                    return;
                }
                resolve(response);
            });
        });
    }
    async submitSignedTransaction(submitSignedTransactionRequest) {
        return new Promise((resolve, reject) => {
            this.grpcClient.submitSignedTransaction(submitSignedTransactionRequest, (error, response) => {
                if (error != null || response == null) {
                    reject(error);
                    return;
                }
                resolve(response);
            });
        });
    }
}
exports.default = GRPCNetworkClient;
//# sourceMappingURL=grpc-network-client.js.map