// package: io.xpring
// file: xrp_ledger.proto

/* tslint:disable */

import * as grpc from "grpc";
import * as xrp_ledger_pb from "./xrp_ledger_pb";
import * as account_info_pb from "./account_info_pb";
import * as get_account_info_request_pb from "./get_account_info_request_pb";
import * as get_fee_request_pb from "./get_fee_request_pb";
import * as submit_signed_transaction_request_pb from "./submit_signed_transaction_request_pb";
import * as submit_signed_transaction_response_pb from "./submit_signed_transaction_response_pb";
import * as fee_pb from "./fee_pb";

interface IXRPLedgerService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
    getAccountInfo: IXRPLedgerService_IGetAccountInfo;
    getFee: IXRPLedgerService_IGetFee;
    submitSignedTransaction: IXRPLedgerService_ISubmitSignedTransaction;
}

interface IXRPLedgerService_IGetAccountInfo extends grpc.MethodDefinition<get_account_info_request_pb.GetAccountInfoRequest, account_info_pb.AccountInfo> {
    path: string; // "/io.xpring.XRPLedger/GetAccountInfo"
    requestStream: boolean; // false
    responseStream: boolean; // false
    requestSerialize: grpc.serialize<get_account_info_request_pb.GetAccountInfoRequest>;
    requestDeserialize: grpc.deserialize<get_account_info_request_pb.GetAccountInfoRequest>;
    responseSerialize: grpc.serialize<account_info_pb.AccountInfo>;
    responseDeserialize: grpc.deserialize<account_info_pb.AccountInfo>;
}
interface IXRPLedgerService_IGetFee extends grpc.MethodDefinition<get_fee_request_pb.GetFeeRequest, fee_pb.Fee> {
    path: string; // "/io.xpring.XRPLedger/GetFee"
    requestStream: boolean; // false
    responseStream: boolean; // false
    requestSerialize: grpc.serialize<get_fee_request_pb.GetFeeRequest>;
    requestDeserialize: grpc.deserialize<get_fee_request_pb.GetFeeRequest>;
    responseSerialize: grpc.serialize<fee_pb.Fee>;
    responseDeserialize: grpc.deserialize<fee_pb.Fee>;
}
interface IXRPLedgerService_ISubmitSignedTransaction extends grpc.MethodDefinition<submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, submit_signed_transaction_response_pb.SubmitSignedTransactionResponse> {
    path: string; // "/io.xpring.XRPLedger/SubmitSignedTransaction"
    requestStream: boolean; // false
    responseStream: boolean; // false
    requestSerialize: grpc.serialize<submit_signed_transaction_request_pb.SubmitSignedTransactionRequest>;
    requestDeserialize: grpc.deserialize<submit_signed_transaction_request_pb.SubmitSignedTransactionRequest>;
    responseSerialize: grpc.serialize<submit_signed_transaction_response_pb.SubmitSignedTransactionResponse>;
    responseDeserialize: grpc.deserialize<submit_signed_transaction_response_pb.SubmitSignedTransactionResponse>;
}

export const XRPLedgerService: IXRPLedgerService;

export interface IXRPLedgerServer {
    getAccountInfo: grpc.handleUnaryCall<get_account_info_request_pb.GetAccountInfoRequest, account_info_pb.AccountInfo>;
    getFee: grpc.handleUnaryCall<get_fee_request_pb.GetFeeRequest, fee_pb.Fee>;
    submitSignedTransaction: grpc.handleUnaryCall<submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, submit_signed_transaction_response_pb.SubmitSignedTransactionResponse>;
}

export interface IXRPLedgerClient {
    getAccountInfo(request: get_account_info_request_pb.GetAccountInfoRequest, callback: (error: grpc.ServiceError | null, response: account_info_pb.AccountInfo) => void): grpc.ClientUnaryCall;
    getAccountInfo(request: get_account_info_request_pb.GetAccountInfoRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: account_info_pb.AccountInfo) => void): grpc.ClientUnaryCall;
    getAccountInfo(request: get_account_info_request_pb.GetAccountInfoRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: account_info_pb.AccountInfo) => void): grpc.ClientUnaryCall;
    getFee(request: get_fee_request_pb.GetFeeRequest, callback: (error: grpc.ServiceError | null, response: fee_pb.Fee) => void): grpc.ClientUnaryCall;
    getFee(request: get_fee_request_pb.GetFeeRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: fee_pb.Fee) => void): grpc.ClientUnaryCall;
    getFee(request: get_fee_request_pb.GetFeeRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: fee_pb.Fee) => void): grpc.ClientUnaryCall;
    submitSignedTransaction(request: submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, callback: (error: grpc.ServiceError | null, response: submit_signed_transaction_response_pb.SubmitSignedTransactionResponse) => void): grpc.ClientUnaryCall;
    submitSignedTransaction(request: submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: submit_signed_transaction_response_pb.SubmitSignedTransactionResponse) => void): grpc.ClientUnaryCall;
    submitSignedTransaction(request: submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: submit_signed_transaction_response_pb.SubmitSignedTransactionResponse) => void): grpc.ClientUnaryCall;
}

export class XRPLedgerClient extends grpc.Client implements IXRPLedgerClient {
    constructor(address: string, credentials: grpc.ChannelCredentials, options?: object);
    public getAccountInfo(request: get_account_info_request_pb.GetAccountInfoRequest, callback: (error: grpc.ServiceError | null, response: account_info_pb.AccountInfo) => void): grpc.ClientUnaryCall;
    public getAccountInfo(request: get_account_info_request_pb.GetAccountInfoRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: account_info_pb.AccountInfo) => void): grpc.ClientUnaryCall;
    public getAccountInfo(request: get_account_info_request_pb.GetAccountInfoRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: account_info_pb.AccountInfo) => void): grpc.ClientUnaryCall;
    public getFee(request: get_fee_request_pb.GetFeeRequest, callback: (error: grpc.ServiceError | null, response: fee_pb.Fee) => void): grpc.ClientUnaryCall;
    public getFee(request: get_fee_request_pb.GetFeeRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: fee_pb.Fee) => void): grpc.ClientUnaryCall;
    public getFee(request: get_fee_request_pb.GetFeeRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: fee_pb.Fee) => void): grpc.ClientUnaryCall;
    public submitSignedTransaction(request: submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, callback: (error: grpc.ServiceError | null, response: submit_signed_transaction_response_pb.SubmitSignedTransactionResponse) => void): grpc.ClientUnaryCall;
    public submitSignedTransaction(request: submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: submit_signed_transaction_response_pb.SubmitSignedTransactionResponse) => void): grpc.ClientUnaryCall;
    public submitSignedTransaction(request: submit_signed_transaction_request_pb.SubmitSignedTransactionRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: submit_signed_transaction_response_pb.SubmitSignedTransactionResponse) => void): grpc.ClientUnaryCall;
}
